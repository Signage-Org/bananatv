<?php

/*
Plugin Name: Fiit Počasie
Plugin URI: https://github.com/martinhaus/bananatv
Description: Displaying weather information from foreign and local sensors
Version: 1.0
Author: Martin Hauskrecht
Author URI: hauskrecht.sk
License: A "Slug" license name e.g. GPL2
*/


class FIITWeatherWidget extends WP_Widget {

	public function __construct() {
		parent::__construct(
			'fiit_weather_widget',
			__( 'Fiit Počasie', 'fiitweathertextdomain' ),
			array(
				'classname'   => 'FIITWeatherWidget',
				'description' => __( 'A basic text widget to demo the Tutsplus series on creating your own widgets.', 'fiitweathertextdomain' )
			)
		);
	}

	public function form( $instance ) {
		
		$defaults = array( 'city_name' => 'Bratislava', 'local_temps' => true );
		$instance = wp_parse_args( (array) $instance, $defaults ); ?>
	    
        <label for="<?php echo $this->get_field_id('city_name'); ?>">Mesto</label>
        <input type="text" id="<?php echo $this->get_field_id( 'city_name' ); ?>" name="<?php echo $this->get_field_name( 'city_name' ); ?>" class="widefat" value="<?php echo $instance['city_name'] ?>"/>
        
        <label for="<?php echo $this->get_field_id('local_temps'); ?>">FIIT lokálne teploty</label>
        <input type=checkbox value="true" id="<?php echo $this->get_field_id( 'local_temps' ); ?>" name="<?php echo $this->get_field_name( 'local_temps' ); ?>" class="widefat" />
        
        
        
        <?php
		//fiitweather_output_data();
		//return parent::form( $instance ); // TODO: Change the autogenerated stub
	}

   public function update( $new_instance, $old_instance ) {
	
	   $instance = $old_instance;
	
	   $instance['city_name'] = $new_instance['city_name'];
	   $instance['local_temps'] = $new_instance['local_temps'];
	
	   return $instance;

    }

	 public function widget( $args, $instance ) {

         extract( $args );
		 fiitweather_register_styles();
		 
		 echo $before_widget;
		 ?>

		<div id="fiit-weather">
      
		 <?php
		
         
         //Get parameteres from widget instance
		 $city_name = $instance['city_name'];
		 $local_temps = ['local_temps'];
		
		 //URL for OpenWeatherMap API
		 $weather_url = "http://api.openweathermap.org/data/2.5/weather?q=$city_name,sk&appid=4240dd8561d188b69796d4577ccc532e&units=metric";
         
		 //Get JSON with weather info
		 $content = file_get_contents($weather_url);
		 $json = json_decode($content, true);
         
		 
		 //Get parameters from JSON
         $condition = $json['weather'][0]['main'];
         $temp = $json['main']['temp'];
         $humidity = $json['main']['humidity'];
         $pressure = $json['main']['pressure'];
         $city_name = $json['name'];
         $sunset = $json['sys']['sunset'];
         $sunrise = $json['sys']['sunrise'];
         
         switch ($condition) {
             
             case "Clouds" : $cond_code = "cloudy" ; break;
             case "Thunderstorm" : $cond_code = "stormy" ; break;
             case "Drizzle" : $cond_code = "rainy" ; break;
             case "Rain" : $cond_code = "rainy" ; break;
             case "Snow" : $cond_code = "snowy" ; break;
             case "Clear" : if(( $sunset - time() ) > 0 && (time() - $sunrise) > 0 ) {
	                            $cond_code = "sunny";
                            }
                            else {
	                            $cond_code = "cloudy";
                            }
                            break;
             
             default: $cond_code = 'cloudy'; break;
                 
         }
         
		 $measurements = fiitweather_get_weather();

		 ?>
            <div class="city-name"><?php echo $city_name ?></div>
            <div class="animation"><div class="<?php echo $cond_code ?>" ></div></div>
            <div class="all-mesurements">
                
                <div class="measurement">
                    <span class="title">Teplota</span>
                    <span class="temp-value"><?php echo $measurements['Teplota'] ?></span>
                </div>
                
                <div class="measurement">
                    <span class="title">Vlhkosť</span>
                    <span class="temp-value"> <?php echo $measurements['Relatívna vlhkosť'] ?></span>
                </div>
                
                <div class="measurement">
                    <span class="title">Tlak</span>
                    <span class="temp-value"> <?php echo $measurements['Tlak'] ?></span>
                </div>
                
        <?php
		// fiitweather_output_data();
		 ?>
	         
            </div>
		<?php
		 echo $after_widget;
    }


}
/* Register the widget */
add_action( 'widgets_init', function(){
	register_widget( 'FIITWeatherWidget' );
});



function fiitweather_register_styles() {
	wp_register_style('fiitweather', plugin_dir_url(__FILE__) . 'css/fiitweather.css');
	wp_enqueue_style('fiitweather');
	
	//Catamaran font
	wp_register_style('catamaran-font', 'https://fonts.googleapis.com/css?family=Catamaran');
	wp_enqueue_style('catamaran_font');
	
	wp_enqueue_script('fiitweather_js',plugin_dir_url(__FILE__) .'js/weather.js');
}

/**
 * Prints weather data
 */
function fiitweather_output_data() {
	$measurements = fiitweather_get_weather();
	foreach ($measurements as $measurement => $value) {
		echo "<div class='measurement'>";
		echo $measurement . "<br>" . $value;
		echo "</div>";
	}
}

/**
 * Creates an array of measurements parsed from sensor data
 */
function fiitweather_get_weather() {
	require_once( plugin_dir_path(__FILE__) . 'simplehtmldom/simple_html_dom.php' );
	//Get XML with weather info
	$html = file_get_html('http://147.175.146.19/_xml_env.php');

	$measurements = array();
	foreach ($html->find('velicina') as $element) {
		$name = $element->find('nazev')[0]->plaintext;
		$value =$element->find('hodnota')[0]->plaintext;
		$unit = $element->find('jednotka')[0]->plaintext;


		//Translation from CZ to SK
		if($name == 'Relativní vlhkost') {
			$name = 'Relatívna vlhkosť';
		}

		if($name == 'Měrná vlhkost') {
			$name = 'Merná vlhkosť';
		}

		//Merge value and unit
		$value = $value . " " .$unit;
		//Add it to the array
		$measurements[$name] = $value;
	}
	return $measurements;

}